# ===============================================
# CAREER DISHA BACKEND - ENVIRONMENT CONFIGURATION
# ===============================================
# Copy this file to .env and update the values

# === SERVER CONFIGURATION ===
NODE_ENV=development
PORT=3000
HOST=localhost

# === DATABASE CONFIGURATION ===
# Replace with your PostgreSQL connection details
# Format: postgresql://username:password@host:port/database_name?schema=public
DATABASE_URL=DATABASE_URL="postgresql://career_user:your_secure_password@localhost:5432/career_disha_db?schema=public"
# === JWT CONFIGURATION ===
# Generate secure random strings for production (use: node -e "console.log(require('crypto').randomBytes(64).toString('hex'))")
JWT_SECRET=your_jwt_secret_key_here_make_it_long_and_secure_minimum_256_bits
JWT_REFRESH_SECRET=your_refresh_secret_key_here_make_it_different_from_jwt_secret
JWT_EXPIRES_IN=15m
JWT_REFRESH_EXPIRES_IN=7d

# === AI SERVICE CONFIGURATION ===
# Google Gemini API - Required for AI features
# Get from: https://makersuite.google.com/
GEMINI_API_KEY=your_gemini_api_key_here

# HuggingFace API - Optional for additional AI models
# Get from: https://huggingface.co/settings/tokens
HUGGINGFACE_API_KEY=your_huggingface_api_key_here

# === EMAIL CONFIGURATION ===
# For sending notifications and password reset emails
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_SECURE=false
SMTP_USER=your_email@gmail.com
SMTP_PASS=your_app_password_not_regular_password

# === FILE UPLOAD CONFIGURATION ===
# Local file storage settings
UPLOAD_DIR=uploads
MAX_FILE_SIZE=10485760  # 10MB in bytes
ALLOWED_EXTENSIONS=jpg,jpeg,png,pdf,doc,docx,txt

# AWS S3 Configuration (Optional - for cloud storage)
AWS_REGION=us-east-1
AWS_ACCESS_KEY_ID=your_aws_access_key
AWS_SECRET_ACCESS_KEY=your_aws_secret_key
S3_BUCKET_NAME=career-disha-uploads

# === SECURITY CONFIGURATION ===
# Password hashing rounds (12 is good for production)
BCRYPT_ROUNDS=12

# Rate limiting configuration
RATE_LIMIT_WINDOW=15  # minutes
RATE_LIMIT_MAX_REQUESTS=100
RATE_LIMIT_AUTH_MAX=5  # login attempts per window
RATE_LIMIT_AI_MAX=10   # AI requests per window
RATE_LIMIT_UPLOAD_MAX=5  # file uploads per window

# CORS configuration (comma-separated origins)
CORS_ORIGIN=http://localhost:3000,http://localhost:3001,http://localhost:5173

# Session configuration
SESSION_SECRET=your_session_secret_here_make_it_secure

# === EXTERNAL API CONFIGURATION ===
# Course platform APIs (for external integrations)
COURSERA_API_KEY=your_coursera_api_key_or_mock_for_dev
UDEMY_API_KEY=your_udemy_api_key_or_mock_for_dev
EDX_API_KEY=your_edx_api_key_or_mock_for_dev

# Job platform APIs
INDEED_API_KEY=your_indeed_api_key_or_mock_for_dev
GITHUB_JOBS_API_KEY=your_github_jobs_api_key_or_mock_for_dev

# === MONITORING CONFIGURATION ===
# Logging configuration
LOG_LEVEL=info  # error, warn, info, debug
LOG_DIR=logs
ENABLE_MONITORING=true
LOG_MAX_SIZE=20m
LOG_MAX_FILES=14d

# Performance thresholds for alerts
ALERT_ERROR_RATE_THRESHOLD=0.05  # 5%
ALERT_RESPONSE_TIME_THRESHOLD=2000  # 2 seconds
ALERT_MEMORY_THRESHOLD=0.9  # 90%

# === WEBSOCKET CONFIGURATION ===
# Socket.IO settings
WEBSOCKET_CORS_ORIGIN=http://localhost:3000,http://localhost:3001
WEBSOCKET_HEARTBEAT_TIMEOUT=60000
WEBSOCKET_HEARTBEAT_INTERVAL=25000

# === CACHE CONFIGURATION ===
# Redis configuration (optional - for production caching)
REDIS_URL=redis://localhost:6379
REDIS_PASSWORD=your_redis_password_if_needed
CACHE_TTL=3600  # 1 hour in seconds

# === THIRD PARTY INTEGRATIONS ===
# Payment processing (if implementing premium features)
STRIPE_SECRET_KEY=your_stripe_secret_key
STRIPE_WEBHOOK_SECRET=your_stripe_webhook_secret

# Analytics (optional)
GOOGLE_ANALYTICS_ID=your_ga_id
MIXPANEL_TOKEN=your_mixpanel_token

# === DEVELOPMENT CONFIGURATION ===
# Debug settings
DEBUG=false
VERBOSE_LOGGING=false

# Mock data settings for development
USE_MOCK_AI=false
USE_MOCK_EMAIL=true
USE_MOCK_EXTERNAL_APIS=true

# === PRODUCTION SETTINGS ===
# SSL and security headers
FORCE_HTTPS=false
TRUST_PROXY=false

# Domain configuration
FRONTEND_URL=http://localhost:3000
BACKEND_URL=http://localhost:3000
API_BASE_URL=/api/v1

# Health check configuration
HEALTH_CHECK_ENABLED=true
HEALTH_CHECK_PATH=/api/health

# === NOTIFICATION SETTINGS ===
# Push notification services (optional)
FCM_SERVER_KEY=your_firebase_server_key
PUSH_NOTIFICATION_ENABLED=false

# === BACKUP CONFIGURATION ===
# Database backup settings (for production)
BACKUP_ENABLED=false
BACKUP_SCHEDULE=0 2 * * *  # Daily at 2 AM
BACKUP_RETENTION_DAYS=30